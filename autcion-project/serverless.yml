service: autcion-project
frameworkVersion: '3'

plugins:
  - serverless-offline
  - serverless-pseudo-parameters

provider:
  name: aws
  versionFunctions: false
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  region: ap-south-1
  environment:
    AUCTIONS_TABLE_NAME: ${self:custom.AuctionsTable.name}
  iamRoleStatements:
    - ${file(iam/AuctionsTableIAM.yml):AuctionsTableIAM}

resources:
  Resources:
    AuctionsTable: ${file(resources/AuctionsTable.yml):AuctionsTable}

functions:
  function1:
    handler: index.handler
    events:
      - http:
         path: /hello
         method: get
  createAuction:
    handler: src/handlers/createAuction.handler
    events:
      - http:
         path: /auction
         method: post
         authorizer: ${self:custom.authorizer}
  getAuctions:
    handler: src/handlers/getAuctions.handler
    events:
      - http:
         path: /auctions
         method: get
         authorizer: ${self:custom.authorizer}
  getAuction:
    handler: src/handlers/getAuction.handler
    events:
      - http:
         path: /auction/{id}
         method: get
         authorizer: ${self:custom.authorizer}
  placeBid:
    handler: src/handlers/placeBid.handler
    events:
      - http:
         path: /auction/{id}/bid
         method: patch
         authorizer: ${self:custom.authorizer}
  processAuctions:
    handler: src/handlers/processAuctions.handler
    # events:
    #   - schedule: rate(1 minute)

custom:
  authorizer: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:auth-service-${self:provider.stage}-auth
  AuctionsTable:
    name: !Ref AuctionsTable
    arn: !GetAtt AuctionsTable.Arn
  bundle:
    linting: false

